# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/geometry.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from common import header_pb2 as common_dot_header__pb2
from common import common_pb2 as common_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63ommon/geometry.proto\x12\x0bzark.common\x1a\x13\x63ommon/header.proto\x1a\x13\x63ommon/common.proto\"6\n\x08PointI2D\x12\x0e\n\x01x\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0e\n\x01y\x18\x02 \x01(\x05H\x01\x88\x01\x01\x42\x04\n\x02_xB\x04\n\x02_y\"K\n\x07Point3i\x12\x0e\n\x01x\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0e\n\x01y\x18\x02 \x01(\x05H\x01\x88\x01\x01\x12\x0e\n\x01z\x18\x03 \x01(\x05H\x02\x88\x01\x01\x42\x04\n\x02_xB\x04\n\x02_yB\x04\n\x02_z\"6\n\x08Vector4F\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\x12\t\n\x01w\x18\x04 \x01(\x02\"u\n\x05\x41\x63\x63\x65l\x12)\n\x06linear\x18\x01 \x01(\x0b\x32\x14.zark.common.Point3dH\x00\x88\x01\x01\x12*\n\x07\x61ngular\x18\x02 \x01(\x0b\x32\x14.zark.common.Point3dH\x01\x88\x01\x01\x42\t\n\x07_linearB\n\n\x08_angular\"V\n\x0c\x41\x63\x63\x65lStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12!\n\x05\x61\x63\x63\x65l\x18\x02 \x01(\x0b\x32\x12.zark.common.Accel\"L\n\x13\x41\x63\x63\x65lWithCovariance\x12!\n\x05\x61\x63\x63\x65l\x18\x01 \x01(\x0b\x32\x12.zark.common.Accel\x12\x12\n\ncovariance\x18\x02 \x03(\x01\"r\n\x1a\x41\x63\x63\x65lWithCovarianceStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12/\n\x05\x61\x63\x63\x65l\x18\x02 \x01(\x0b\x32 .zark.common.AccelWithCovariance\"\xeb\x01\n\x07Inertia\x12\x0e\n\x01m\x18\x01 \x01(\x01H\x00\x88\x01\x01\x12&\n\x03\x63om\x18\x02 \x01(\x0b\x32\x14.zark.common.Point3dH\x01\x88\x01\x01\x12\x10\n\x03ixx\x18\x03 \x01(\x01H\x02\x88\x01\x01\x12\x10\n\x03ixy\x18\x04 \x01(\x01H\x03\x88\x01\x01\x12\x10\n\x03ixz\x18\x05 \x01(\x01H\x04\x88\x01\x01\x12\x10\n\x03iyy\x18\x06 \x01(\x01H\x05\x88\x01\x01\x12\x10\n\x03iyz\x18\x07 \x01(\x01H\x06\x88\x01\x01\x12\x10\n\x03izz\x18\x08 \x01(\x01H\x07\x88\x01\x01\x42\x04\n\x02_mB\x06\n\x04_comB\x06\n\x04_ixxB\x06\n\x04_ixyB\x06\n\x04_ixzB\x06\n\x04_iyyB\x06\n\x04_iyzB\x06\n\x04_izz\"\\\n\x0eInertiaStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12%\n\x07inertia\x18\x02 \x01(\x0b\x32\x14.zark.common.Inertia\"w\n\x0cPointStamped\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.HeaderH\x00\x88\x01\x01\x12(\n\x05point\x18\x02 \x01(\x0b\x32\x14.zark.common.Point3dH\x01\x88\x01\x01\x42\t\n\x07_headerB\x08\n\x06_point\"k\n\x0ePolygonStamped\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.HeaderH\x00\x88\x01\x01\x12$\n\x06points\x18\x02 \x03(\x0b\x32\x14.zark.common.Point3fB\t\n\x07_header\"-\n\x06Pose2D\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\r\n\x05theta\x18\x03 \x01(\x01\"d\n\tPoseArray\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.HeaderH\x00\x88\x01\x01\x12\"\n\x05poses\x18\x02 \x03(\x0b\x32\x13.zark.common.Pose6dB\t\n\x07_header\"s\n\x0bPoseStamped\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.HeaderH\x00\x88\x01\x01\x12&\n\x04pose\x18\x02 \x01(\x0b\x32\x13.zark.common.Pose6dH\x01\x88\x01\x01\x42\t\n\x07_headerB\x07\n\x05_pose\"`\n\x10PoseStampedArray\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12\'\n\x05poses\x18\x02 \x03(\x0b\x32\x18.zark.common.PoseStamped\"Y\n\x12PoseWithCovariance\x12&\n\x04pose\x18\x01 \x01(\x0b\x32\x13.zark.common.Pose6dH\x00\x88\x01\x01\x12\x12\n\ncovariance\x18\x02 \x03(\x01\x42\x07\n\x05_pose\"o\n\x19PoseWithCovarianceStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12-\n\x04pose\x18\x02 \x01(\x0b\x32\x1f.zark.common.PoseWithCovariance\"\x9e\x01\n\x0bQuaternionT\x12\x0e\n\x01x\x18\x01 \x01(\x01H\x00\x88\x01\x01\x12\x0e\n\x01y\x18\x02 \x01(\x01H\x01\x88\x01\x01\x12\x0e\n\x01z\x18\x03 \x01(\x01H\x02\x88\x01\x01\x12\x0e\n\x01w\x18\x04 \x01(\x01H\x03\x88\x01\x01\x12.\n\x04type\x18\x05 \x01(\x0e\x32\x1b.zark.common.QuaternionTypeH\x04\x88\x01\x01\x42\x04\n\x02_xB\x04\n\x02_yB\x04\n\x02_zB\x04\n\x02_wB\x07\n\x05_type\"\x8b\x01\n\x12QuaternionTStamped\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.HeaderH\x00\x88\x01\x01\x12\x31\n\nquaternion\x18\x02 \x01(\x0b\x32\x18.zark.common.QuaternionTH\x01\x88\x01\x01\x42\t\n\x07_headerB\r\n\x0b_quaternion\"u\n\x05Twist\x12)\n\x06linear\x18\x01 \x01(\x0b\x32\x14.zark.common.Point3dH\x00\x88\x01\x01\x12*\n\x07\x61ngular\x18\x02 \x01(\x0b\x32\x14.zark.common.Point3dH\x01\x88\x01\x01\x42\t\n\x07_linearB\n\n\x08_angular\"V\n\x0cTwistStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12!\n\x05twist\x18\x02 \x01(\x0b\x32\x12.zark.common.Twist\"L\n\x13TwistWithCovariance\x12!\n\x05twist\x18\x01 \x01(\x0b\x32\x12.zark.common.Twist\x12\x12\n\ncovariance\x18\x02 \x03(\x01\"r\n\x1aTwistWithCovarianceStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12/\n\x05twist\x18\x02 \x01(\x0b\x32 .zark.common.TwistWithCovariance\"r\n\x06Wrench\x12(\n\x05\x66orce\x18\x01 \x01(\x0b\x32\x14.zark.common.Point3dH\x00\x88\x01\x01\x12)\n\x06torque\x18\x02 \x01(\x0b\x32\x14.zark.common.Point3dH\x01\x88\x01\x01\x42\x08\n\x06_forceB\t\n\x07_torque\"Y\n\rWrenchStamped\x12#\n\x06header\x18\x01 \x01(\x0b\x32\x13.zark.common.Header\x12#\n\x06wrench\x18\x02 \x01(\x0b\x32\x13.zark.common.Wrenchb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'common.geometry_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _POINTI2D._serialized_start=80
  _POINTI2D._serialized_end=134
  _POINT3I._serialized_start=136
  _POINT3I._serialized_end=211
  _VECTOR4F._serialized_start=213
  _VECTOR4F._serialized_end=267
  _ACCEL._serialized_start=269
  _ACCEL._serialized_end=386
  _ACCELSTAMPED._serialized_start=388
  _ACCELSTAMPED._serialized_end=474
  _ACCELWITHCOVARIANCE._serialized_start=476
  _ACCELWITHCOVARIANCE._serialized_end=552
  _ACCELWITHCOVARIANCESTAMPED._serialized_start=554
  _ACCELWITHCOVARIANCESTAMPED._serialized_end=668
  _INERTIA._serialized_start=671
  _INERTIA._serialized_end=906
  _INERTIASTAMPED._serialized_start=908
  _INERTIASTAMPED._serialized_end=1000
  _POINTSTAMPED._serialized_start=1002
  _POINTSTAMPED._serialized_end=1121
  _POLYGONSTAMPED._serialized_start=1123
  _POLYGONSTAMPED._serialized_end=1230
  _POSE2D._serialized_start=1232
  _POSE2D._serialized_end=1277
  _POSEARRAY._serialized_start=1279
  _POSEARRAY._serialized_end=1379
  _POSESTAMPED._serialized_start=1381
  _POSESTAMPED._serialized_end=1496
  _POSESTAMPEDARRAY._serialized_start=1498
  _POSESTAMPEDARRAY._serialized_end=1594
  _POSEWITHCOVARIANCE._serialized_start=1596
  _POSEWITHCOVARIANCE._serialized_end=1685
  _POSEWITHCOVARIANCESTAMPED._serialized_start=1687
  _POSEWITHCOVARIANCESTAMPED._serialized_end=1798
  _QUATERNIONT._serialized_start=1801
  _QUATERNIONT._serialized_end=1959
  _QUATERNIONTSTAMPED._serialized_start=1962
  _QUATERNIONTSTAMPED._serialized_end=2101
  _TWIST._serialized_start=2103
  _TWIST._serialized_end=2220
  _TWISTSTAMPED._serialized_start=2222
  _TWISTSTAMPED._serialized_end=2308
  _TWISTWITHCOVARIANCE._serialized_start=2310
  _TWISTWITHCOVARIANCE._serialized_end=2386
  _TWISTWITHCOVARIANCESTAMPED._serialized_start=2388
  _TWISTWITHCOVARIANCESTAMPED._serialized_end=2502
  _WRENCH._serialized_start=2504
  _WRENCH._serialized_end=2618
  _WRENCHSTAMPED._serialized_start=2620
  _WRENCHSTAMPED._serialized_end=2709
# @@protoc_insertion_point(module_scope)
