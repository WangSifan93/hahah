#ifndef AD_E2E_PLANNING_COMMON_GFLAGS_H
#define AD_E2E_PLANNING_COMMON_GFLAGS_H

#include "gflags/gflags.h"

DECLARE_int32(ad_e2e_planning_log_level);

DECLARE_int32(ad_e2e_prediction_pool_size);
DECLARE_int32(ad_e2e_city_planner_pool_size);

DECLARE_int32(ad_e2e_planning_future_wait_timeout);
DECLARE_double(ad_e2e_planning_zero_threshold);

DECLARE_double(ad_e2e_planning_map_search_heading_limit);
DECLARE_double(ad_e2e_planning_map_minimum_boundary_search_radius);
DECLARE_double(ad_e2e_planning_map_point_distance_threshold);
DECLARE_double(ad_e2e_planning_map_boundary_gap_threshold);
DECLARE_double(ad_e2e_planning_boundary_interpolate_dist);
DECLARE_double(ad_e2e_planning_lane_polyline_vector_dist);
DECLARE_uint32(ad_e2e_planning_lane_polyline_vector_num);
DECLARE_uint32(ad_e2e_planning_lane_vector_dim);
DECLARE_double(ad_e2e_planning_road_boundary_polyline_vector_dist);
DECLARE_uint32(ad_e2e_planning_road_boundary_polyline_vector_num);
DECLARE_uint32(ad_e2e_planning_road_boundary_vector_dim);

DECLARE_uint32(ad_e2e_planning_polygon_polyline_vector_num);
DECLARE_uint32(ad_e2e_planning_polygon_polyline_vector_dim);
DECLARE_double(ad_e2e_junction_search_radius);
DECLARE_double(ad_e2e_converged_entry_speed);
DECLARE_double(ad_e2e_lane_sequence_unique_distance);
DECLARE_double(ad_e2e_min_juction_lane_length);

DECLARE_double(ad_e2e_planning_forward_lane_sequence_length);
DECLARE_double(ad_e2e_planning_backward_lane_sequence_length);

DECLARE_double(ad_e2e_caution_obstacle_max_distance);
DECLARE_int32(ad_e2e_planning_obstacle_lru_cache_num);
DECLARE_int32(ad_e2e_obstacle_lru_cache_num);
DECLARE_double(ad_e2e_current_lane_search_dist);
DECLARE_int32(ad_e2e_max_dynamic_obstacle_num);
DECLARE_string(ad_e2e_adc_id);
DECLARE_uint32(ad_e2e_planning_max_obstacle_vector_size);
DECLARE_uint32(ad_e2e_planning_dynamic_obstacle_vector_dim);
DECLARE_uint32(ad_e2e_planning_static_obstacle_vector_dim);

DECLARE_string(ad_e2e_planning_platform);
DECLARE_string(ad_e2e_platform_config);

DECLARE_string(ad_e2e_city_config);
DECLARE_string(ad_e2e_vehicle_params_path);

DECLARE_double(ad_e2e_prediction_predict_period);
DECLARE_double(ad_e2e_prediction_trajectory_time_step);

#endif
