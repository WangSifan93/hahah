#ifndef ONBOARD_PLANNER_PLANNER_FLAGS_H_
#define ONBOARD_PLANNER_PLANNER_FLAGS_H_

#include "gflags/gflags.h"

DECLARE_int32(planner_debug);

DECLARE_int32(planner_thread_pool_size);

DECLARE_double(planner_lateral_reset_error);

DECLARE_double(planner_max_allowed_iteration_time);

DECLARE_double(planner_max_localization_transform_delay);
DECLARE_double(planner_max_perception_delay);
DECLARE_double(planner_max_pose_delay);

DECLARE_double(planner_max_drop_cruising_speed_limit);

DECLARE_double(planner_lc_safety_radical_factor);
DECLARE_double(planner_lc_safety_conservative_factor);

DECLARE_bool(planner_allow_async_in_main_thread);
DECLARE_bool(planner_allow_multi_threads_in_st);
DECLARE_bool(planner_multi_st_in_parallel);

DECLARE_double(planner_check_trajectory_engage_condition_duration);

DECLARE_bool(planner_consider_objects);
DECLARE_double(planner_filter_reflected_object_distance);
DECLARE_int32(planner_lookforward_time_ms);
DECLARE_double(planner_prediction_probability_threshold);
DECLARE_bool(planner_only_use_most_likely_trajectory);
DECLARE_int32(planner_task_init_type);
DECLARE_bool(planner_export_all_prediction_to_speed_considered);
DECLARE_bool(planner_check_aeb);
DECLARE_bool(planner_simplify_debug_proto);

DECLARE_int32(planner_running_platform);

DECLARE_bool(planner_dumping_initialization_features);
DECLARE_bool(planner_dumping_selector_features);
DECLARE_bool(planner_filter_selector_intention);
DECLARE_bool(planner_dumping_ml_data_in_simulation);

DECLARE_bool(planner_open_door_at_route_end);
DECLARE_double(planner_door_state_override_waiting_time);

DECLARE_bool(planner_regard_green_flashing_as_green);

DECLARE_bool(planner_enable_occluded_objects_inference);
DECLARE_bool(planner_enable_crosswalk_occluded_objects_inference);
DECLARE_bool(planner_ignore_stalled_objects_on_tl_controlled_leftmost_lane);
DECLARE_bool(planner_enable_un_tl_controlled_intersection_reasoning);

DECLARE_int32(planner_st_parallel_branch_num);
DECLARE_bool(planner_est_decision_exploration_seperate_lc_pause);
DECLARE_bool(planner_est_decision_exploration_allow_borrow);
DECLARE_bool(planner_send_lane_graph_to_canvas);
DECLARE_bool(planner_consider_all_lanes_virtual);

DECLARE_int32(planner_spacetime_search_debug_level);
DECLARE_bool(planner_spacetime_search_only_activate_nodes_near_refline);
DECLARE_int32(planner_spacetime_search_max_multi_traj_num);
DECLARE_bool(planner_spacetime_search_enable_post_evaluation);
DECLARE_bool(planner_spacetime_search_enable_clip);

DECLARE_bool(planner_st_traj_mgr_use_all);

DECLARE_bool(planner_auto_tuning_mode);
DECLARE_bool(planner_optimizer_data_cleaning);
DECLARE_bool(planner_update_learned_alphas);
DECLARE_bool(planner_update_learned_alphas_except_lane_change);
DECLARE_bool(planner_compare_based_on_original_weight);

DECLARE_bool(planner_use_tuned_selector_params);
DECLARE_string(planner_selector_params_file_address);

DECLARE_int32(planner_plan_passage_debug_level);
DECLARE_double(planner_path_start_point_time_diff_limit);
DECLARE_bool(planner_enable_path_start_point_look_ahead);
DECLARE_int32(planner_local_lane_map_debug_level);

DECLARE_int32(planner_runtime_uturn_level);

DECLARE_bool(planner_enable_dynamic_lane_speed_limit);

DECLARE_double(planner_override_lane_speed_limit_proportion);

DECLARE_bool(planner_rebuild_route_navi_info);

DECLARE_bool(planner_enable_lane_change_in_intersection);
DECLARE_bool(planner_enable_cross_solid_boundary);
DECLARE_int32(planner_begin_lane_change_frame);
DECLARE_int32(planner_begin_signal_frame);

DECLARE_bool(planner_enable_safe_invariance_supervisor_debug);

DECLARE_bool(planner_safe_invariance_supervisor_consider_curb);
DECLARE_bool(planner_safe_invariance_supervisor_path_follow_lane);
DECLARE_bool(planner_safe_invariance_supervisor_skip_m);
DECLARE_bool(planner_safe_invariance_problem_consider_kgr);

DECLARE_int32(planner_safe_invariance_canvas_level);

DECLARE_bool(planner_enable_cross_iteration_tf);

DECLARE_bool(planner_force_no_map);

DECLARE_bool(planner_enable_lc_style_params);

DECLARE_double(planner_paddle_lane_change_max_prepare_time);

DECLARE_bool(
    planner_st_path_planner_lookahead_for_trajectory_optimizer_synchronization);

DECLARE_bool(planner_traj_opt_init_traj_uses_last_optimized_trajectory);

DECLARE_bool(planner_force_route_filtered_smm);

DECLARE_bool(planner_mapless_status);

DECLARE_bool(lon_decision_enable_use_game_theory);

#endif
