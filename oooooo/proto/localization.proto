syntax = "proto2";

package e2e_noa;

import "lite_common.proto";

enum LocalizationMode {
  LOCMOD_UNKNOWN = 0;
  LOCMOD_MAP = 1;
  LOCMOD_MAP_LATERAL = 2;
  LOCMOD_INS = 3;
  LOCMOD_GPS = 4;
}

message MapLocationProto {
  optional int64 lane_id = 1;
  optional uint64 link_identifier = 2;        // section
  optional uint64 lane_model_identifier = 3;  // lane
  optional uint32 lane_identifier = 4;        // lane
  // The index [0, n) of lane shape point where AV pose projected on the lane
  optional uint32 lane_shape_point_index = 5;  // reference line start point
  // The projection point of AV pose on the lane
}

message LocalizationTransformProto {
  optional LiteHeader header = 1;
  optional double timestamp = 2;

  optional double smooth_ref_x = 3;
  optional double smooth_ref_y = 4;
  optional double global_ref_x = 5;
  optional double global_ref_y = 6;
  // Yaw difference in vehicle frame from smooth to global.
  optional double yaw_diff = 7;
  optional double z_diff = 8;

  // The LiDAR/IMU calibration yaw correction.
  optional double yaw_correct = 10 [default = 0.0];

  // The yaw correction is from online or bias.
  optional bool yaw_correct_from_online = 13;

  enum Type {
    LIDAR = 0;
    RTK = 1;
    VISUAL = 2;
  }
  optional Type type = 11 [default = LIDAR];

  // Multi-level map level
  optional int32 level_id = 12 [default = 0];

  // Localization mode
  optional LocalizationMode mode = 14;

  optional MapLocationProto map_location = 15;

  // arry 4: 0:map 1:perception 2:match 3:gnss
  repeated int32 error_code = 16;

  enum LocStatus {
    kInit = 0;
    kNormal = 1;
    kLowPrecision = 2;
    kInvalid = 3;
  }
  optional LocStatus loc_status = 17;

  optional int64 outside_odd_reason = 18;

  reserved 9;
}
