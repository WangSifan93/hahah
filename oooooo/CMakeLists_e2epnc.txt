cmake_minimum_required(VERSION 3.20...3.25)

project(e2e_pnc)
add_compile_options(-w)

set(CMAKE_PREFIX_PATH "${CMAKE_INSTALL_PREFIX}" ${CMAKE_PREFIX_PATH})
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=unused-parameter -Wno-error=unused-variable -Wno-error=unused-but-set-variable -Wno-error=unused-function -Wno-error=switch")
if(MY_PLATFORM STREQUAL "arm")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -g0")
    set(BUILD_ONBOARD ON)
endif()

set(BUILD_STATIC_LIBS OFF)
set(BUILD_SHARED_LIBS ON)
set(GFLAGS_USE_STATIC_LIBS OFF)

find_package(messages REQUIRED)
find_package(google_protobuf REQUIRED)
find_package(eigen3 REQUIRED)

find_package(glog REQUIRED)
find_package(gflags REQUIRED)
find_package(tros REQUIRED)
find_package(fmt REQUIRED)
find_package(boost REQUIRED)
find_package(osqp REQUIRED)
find_package(myabsl REQUIRED)
find_package(gtest REQUIRED)

include_directories(
    ${Protobuf_INCLUDE_DIRS}
)

add_subdirectory(./pnc_interface/proto)

if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/src")
    add_subdirectory(pnc_interface)
    list(APPEND E2E_LIBS_TARGETS
         e2e_common
         e2e_planning_protos
         e2e_pnc
    )
    foreach(E2E_ALGO ${E2E_LIBS_TARGETS})
        install(TARGETS ${E2E_ALGO}
            LIBRARY DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/deps/common/${MY_PLATFORM})
    endforeach()
else()
    list(APPEND E2E_LIBS_TARGETS
         e2e_common
         e2e_pnc
    )
    foreach(E2E_ALGO ${E2E_LIBS_TARGETS})
        install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/deps/common/${MY_PLATFORM}/lib${E2E_ALGO}.so"
            DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/${PROJECT_NAME})
    endforeach()
    set(E2E_LIBS_TARGETS e2e_planning_protos)
endif()

set(E2E_ALGO_LIST
    dispatcher_selector
    pnp_decision
    interactive_speedplan
    trajectory_optimizer
)

foreach(E2E_ALGO ${E2E_ALGO_LIST})
    if(TARGET ${E2E_ALGO})
        list(APPEND E2E_LIBS_TARGETS ${E2E_ALGO})
        install(TARGETS ${E2E_ALGO}
            LIBRARY DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/deps/${E2E_ALGO}/${MY_PLATFORM})
        install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${E2E_ALGO}/include"
            DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/deps/${E2E_ALGO})
    else()
        install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/pnc_interface/deps/${E2E_ALGO}/${MY_PLATFORM}/lib${E2E_ALGO}.so"
                DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/${PROJECT_NAME})
    endif()
endforeach()

install(TARGETS ${E2E_LIBS_TARGETS}
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/${PROJECT_NAME})

install(DIRECTORY ${PROJECT_SOURCE_DIR}/pnc_interface/config/
        DESTINATION ${CMAKE_INSTALL_PREFIX}/config/e2e_pnc
        FILES_MATCHING PATTERN "*.json"
)

install(DIRECTORY ${PROJECT_SOURCE_DIR}/pnc_interface/conf/
        DESTINATION ${CMAKE_INSTALL_PREFIX}/config/e2e_pnc/conf
        FILES_MATCHING PATTERN "*.pb.txt"
)


if(CMAKE_INSTALL_MODE)
  message(FATAL_ERROR "Installation should not trigger rebuild")
endif()

# set(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY TRUE)  # 跳过安装时的依赖检查