syntax = "proto2";

package e2e_noa;
import "lite_common.proto";
import "lane_path.proto";

import "trajectory_validation.proto";

import "turn_signal.proto";
import "lane_change.proto";

import "trajectory_point.proto";

message TrajectoryProto {
  optional LiteHeader header = 1;

  // The planning.s trajectory start timestamp in seconds.
  optional double trajectory_start_timestamp = 23;

  optional uint64 planner_state_seq_num = 26;

  repeated ApolloTrajectoryPointProto trajectory_point = 3;

  optional mapping.LanePathProto target_lane_path_from_current = 6;

  optional TurnSignal turn_signal = 8;

  // Traj points in the past, ascending in relative time (all negative).
  repeated ApolloTrajectoryPointProto past_points = 9;

  optional LaneChangeStage lane_change_stage = 17;
  optional bool lane_change_left = 18;

  optional planning.TrajectoryValidationResultProto traj_validation_result = 19;

  // Next ID: 30

  reserved 2, 5, 7, 10 to 16, 21, 24, 25;
}